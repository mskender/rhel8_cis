- name: SCORED | 1.1.1.1 | PATCH | Ensure mounting of cramfs filesystems is disabled
  lineinfile:
    dest: /etc/modprobe.d/cis.conf
    regexp: ^(#)?install cramfs(\s|$)
    line: install cramfs /bin/true
    mode: 0644
    create: yes
  when:
    - rhel8_cis_rule_1_1_1_1
  tags:
    - level1
    - scored
    - patch
    - rule_1.1.1.1
    - cramfs

- name: SCORED | 1.1.1.1 | PATCH | Remove cramfs module
  modprobe:
    name: cramfs
    state: absent
  when:
    - rhel8_cis_rule_1_1_1_1
    - ansible_virtualization_type != "docker"
  tags:
    - level1
    - scored
    - patch
    - rule_1.1.1.1
    - cramfs

- name: NOTSCORED | 1.1.1.2 | PATCH | Ensure mounting of vFAT filesystems is limited
  lineinfile:
    dest: /etc/modprobe.d/cis.conf
    regexp: ^(#)?install vfat(\s|$)
    line: install vfat /bin/true
    mode: 0644
    create: yes
  when:
    - rhel8_cis_rule_1_1_1_2
    - not booted_with_efi
  tags:
    - level2
    - patch
    - rule_1.1.1.2
    - vfat

- name: SCORED | 1.1.1.2 | PATCH | Remove vFAT module
  modprobe:
    name: vfat
    state: absent
  when:
    - rhel8_cis_rule_1_1_1_2
    - ansible_virtualization_type != "docker"
    - not booted_with_efi
  tags:
    - level2
    - scored
    - patch
    - rule_1.1.1.2
    - vfat


- name: SCORED | 1.1.1.3 | PATCH | Ensure mounting of squashfs filesystems is disabled
  lineinfile:
    dest: /etc/modprobe.d/cis.conf
    regexp: ^(#)?install squashfs(\s|$)
    line: install squashfs /bin/true
    mode: 0644
    create: yes
  when:
    - rhel8_cis_rule_1_1_1_3
  tags:
    - level1
    - scored
    - patch
    - rule_1.1.1.3
    - squashfs

- name: SCORED | 1.1.1.3 | PATCH | Remove squashfs module
  modprobe:
    name: squashfs
    state: absent
  when:
    - rhel8_cis_rule_1_1_1_3
    - ansible_virtualization_type != "docker"
  tags:
    - level1
    - scored
    - patch
    - rule_1.1.1.3
    - squashfs

- name: SCORED | 1.1.1.4 | PATCH | Ensure mounting of udf filesystems is disabled
  lineinfile:
    dest: /etc/modprobe.d/cis.conf
    regexp: ^(#)?install udf(\s|$)
    line: install udf /bin/true
    mode: 0644
    create: yes
  when:
    - rhel8_cis_rule_1_1_1_4
  tags:
    - level1
    - scored
    - patch
    - rule_1.1.1.4
    - udf

- name: SCORED | 1.1.1.4 | PATCH | Remove udf module
  modprobe:
    name: udf
    state: absent
  when:
    - rhel8_cis_rule_1_1_1_4
    - ansible_virtualization_type != "docker"
  tags:
    - level1
    - scored
    - patch
    - rule_1.1.1.4
    - udf

- name: SCORED | 1.1.2 | PATCH | Ensure separate partition exists for /tmp | enable
    and start/restart tmp.mount
  systemd:
    name: tmp.mount
    daemon_reload: yes
    enabled: yes
    masked: no
    state: started
  when:
    - rhel8_cis_rule_1_1_2
  tags:
    - level1
    - scored
    - patch
    - rule_1.1.2

- name: "SCORED | 1.1.3 | PATCH | Ensure nodev option set on /tmp partition\n SCORED\
    \ | 1.1.4 | PATCH | Ensure nosuid option set on /tmp partition\n SCORED | 1.1.5\
    \ | PATCH | Ensure noexec option set on /tmp partition\n | drop custom tmp.mount"
  copy:
    src: etc/systemd/system/tmp.mount
    dest: /etc/systemd/system/tmp.mount
    owner: root
    group: root
    mode: 0644
  notify: systemd restart tmp.mount
  when:
    - rhel8_cis_rule_1_1_3
    - rhel8_cis_rule_1_1_4
    - rhel8_cis_rule_1_1_5
  tags:
    - level1
    - scored
    - patch
    - rule_1.1.3
    - rule_1.1.4
    - rule_1.1.5

- name: SCORED | 1.1.6 | PATCH | Ensure separate partition exists for /var
  debug: msg={{ item.mount }}
  loop: "{{ ansible_mounts | selectattr('mount', 'equalto', '/var') | list }}"
  changed_when: no
  when:
    - rhel8_cis_rule_1_1_6
  tags:
    - level2
    - scored
    - patch
    - rule_1.1.6
    - skip_ansible_lint

- name: SCORED | 1.1.7 | PATCH | Ensure separate partition exists for /var/tmp
  debug: msg={{ item.mount }}
  loop: "{{ ansible_mounts | selectattr('mount', 'equalto', '/var/tmp') | list }}"
  changed_when: no
  when:
    - rhel8_cis_rule_1_1_7
  tags:
    - level2
    - scored
    - patch
    - rule_1.1.7
    - skip_ansible_lint

- name: "SCORED | 1.1.8  | PATCH | Ensure nodev option set on /var/tmp partition\n\
    \ SCORED | 1.1.9  | PATCH | Ensure nosuid option set on /var/tmp partition\n SCORED\
    \ | 1.1.10 | PATCH | Ensure noexec option set on /var/tmp partition"
  mount:
    name: /var/tmp
    src: "{{ rhel8_cis_vartmp['source'] }}"
    state: mounted
    fstype: "{{ rhel8_cis_vartmp['fstype'] }}"
    opts: "{{ rhel8_cis_vartmp['opts'] }}"
  when:
    - rhel8_cis_vartmp['enabled'] == 'yes'
    - rhel8_cis_rule_1_1_8
    - rhel8_cis_rule_1_1_9
    - rhel8_cis_rule_1_1_10
  tags:
    - level1
    - scored
    - patch
    - rule_1.1.8
    - rule_1.1.9
    - rule_1.1.10

- name: SCORED | 1.1.11 | PATCH | Ensure separate partition exists for /var/log
  debug: msg={{ item.mount }}
  loop: "{{ ansible_mounts | selectattr('mount', 'equalto', '/var/log') | list }}"
  changed_when: no
  when:
    - rhel8_cis_rule_1_1_11
  tags:
    - level2
    - scored
    - patch
    - rule_1.1.11
    - skip_ansible_lint

- name: SCORED | 1.1.12 | PATCH | Ensure separate partition exists for /var/log/audit
  debug: msg={{ item.mount }}
  loop: "{{ ansible_mounts | selectattr('mount', 'equalto', '/var/log/audit') | list }}"
  changed_when: no
  when:
    - rhel8_cis_rule_1_1_12
  tags:
    - level2
    - scored
    - patch
    - rule_1.1.12
    - skip_ansible_lint

- name: SCORED | 1.1.13 | PATCH | Ensure separate partition exists for /home
  debug: msg={{ item.mount }}
  loop: "{{ ansible_mounts | selectattr('mount', 'equalto', '/home') | list }}"
  changed_when: no
  when:
    - rhel8_cis_rule_1_1_13
  tags:
    - level2
    - scored
    - patch
    - rule_1.1.13
    - skip_ansible_lint

- name: SCORED | 1.1.14 | PATCH | Ensure nodev option set on /home partition
  mount:
    name: /home
    src: '{{ item.device }}'
    state: mounted
    fstype: '{{ item.fstype }}'
    opts: nodev
  loop: "{{ ansible_mounts | selectattr('mount', 'equalto', '/home') | list }}"
  when:
    - rhel8_cis_rule_1_1_14
  no_log: true
  tags:
    - level1
    - level2
    - patch
    - rule_1.1.14

- name: "SCORED | 1.1.15 | PATCH | Ensure nodev option set on /dev/shm partition\n\
    \ SCORED | 1.1.16 | PATCH | Ensure nosuid option set on /dev/shm partition\n SCORED\
    \ | 1.1.17 | PATCH | Ensure noexec option set on /dev/shm partition"
  mount:
    name: /dev/shm
    src: tmpfs
    state: mounted
    fstype: tmpfs
    opts: defaults,nodev,nosuid,noexec
  when:
    - rhel8_cis_rule_1_1_15
    - rhel8_cis_rule_1_1_16
    - rhel8_cis_rule_1_1_17
  tags:
    - level1
    - scored
    - patch
    - rule_1.1.15
    - rule_1.1.16
    - rule_1.1.17

- name: NOTSCORED | 1.1.18 | PATCH | Ensure nodev option set on removable media partitions
  debug:
    msg: --> Not relevant
  changed_when: no
  when:
    - rhel8_cis_rule_1_1_18
  tags:
    - level1
    - notscored
    - patch
    - rule_1.1.18

- name: NOTSCORED | 1.1.19 | PATCH | Ensure nosuid option set on removable media partitions
  debug:
    msg: --> Not relevant
  changed_when: no
  when:
    - rhel8_cis_rule_1_1_19
  tags:
    - level1
    - notscored
    - patch
    - rule_1.1.19

- name: NOTSCORED | 1.1.20 | PATCH | Ensure noexec option set on removable media partitions
  debug:
    msg: --> Not relevant
  changed_when: no
  when:
    - rhel8_cis_rule_1_1_20
  tags:
    - level1
    - notscored
    - patch
    - rule_1.1.20

- name: SCORED | 1.1.21 | PATCH | Ensure sticky bit is set on all world-writable directories
  shell: df --local -P | awk {'if (NR!=1) print $6'} | xargs -I '{}' find '{}' -xdev
    -type d -perm -0002 2>/dev/null | xargs chmod a+t
  changed_when: no
  failed_when: no
  #when: sticky_bit_on_worldwritable_dirs_audit.rc == '0'
  when:
    - rhel8_cis_rule_1_1_21
  tags:
    - level1
    - level2
    - patch
    - rule_1.1.21

- name: SCORED | 1.1.22 | PATCH | Disable Automounting
  service:
    name: autofs
    enabled: no
  when:
    - "'autofs' in ansible_facts.packages"
    - rhel8_cis_rule_1_1_22
  tags:
    - level1
    - level2
    - patch
    - rule_1.1.22

- name: SCORED | 1.1.23 | PATCH | Disable USB Storage
  lineinfile:
    dest: /etc/modprobe.d/cis.conf
    regexp: ^(#)?install usb-storage(\s|$)
    line: install usb-storage /bin/true
    mode: 0644
    create: yes
  when:
    - rhel8_cis_rule_1_1_23
  tags:
    - level1
    - level2
    - patch
    - rule_1.1.23
    - usb-storage

- name: SCORED | 1.1.23 | PATCH | Remove USB Stroage module
  modprobe:
    name: usb-storage
    state: absent
  when:
    - rhel8_cis_rule_1_1_23
    - ansible_virtualization_type != "docker"
  tags:
    - level1
    - level2
    - scored
    - patch
    - rule_1.1.23
    - usb-storage

- name: NOTSCORED | 1.2.1 | PATCH | Ensure Red Hat Network or Subscription Manager
    connection is configured
  command: subscription-manager identity
  changed_when: no
  failed_when: no
  when:
    - rhel8_cis_rule_1_2_1
  tags:
    - level1
    - notscored
    - patch
    - rule_1.2.1

- name: NOTSCORED | 1.2.2 | PATCH | Disable the rhnsd Daemon
  service:
    name: rhnsd
    state: stopped
    enabled: no
  when:
    - "'rhnsd' in ansible_facts.packages"
    - not rhel8_cis_rhnsd_required
    - rhel8_cis_rule_1_2_2
  tags:
    - level2
    - notscored
    - patch
    - rule_1.2.2

- name: NOTSCORED | 1.2.3 | PATCH | Ensure GPG keys are configured
  command: gpg --quiet --with-fingerprint /etc/pki/rpm-gpg/RPM-GPG-KEY-{{ ansible_distribution|lower
    }}-release
  when:
    - rhel8_cis_rule_1_2_3
    - ansible_distribution == "RedHat"
  changed_when: no
  tags:
    - level1
    - notscored
    - patch
    - rule_1.2.3

- name: SCORED | 1.2.4 | PATCH | Ensure gpgcheck is globally activated
  replace:
    path: /etc/yum.conf
    regexp: ^gpgcheck=0
    replace: gpgcheck=1
  when:
    - rhel8_cis_rule_1_2_4
  tags:
    - level1
    - scored
    - patch
    - rule_1.2.4

- name: SCORED | 1.2.4 | PATCH | Ensure gpgcheck is globally activated
  block:
    - name: SCORED | 1.2.4 | PATCH | Ensure gpgcheck is globally activated
      find:
        paths: /etc/yum.repos.d
        patterns: '*.repo'
      register: package_repos
      changed_when: no

    - name: SCORED | 1.2.4 | PATCH | Ensure gpgcheck is globally activated - repos
      replace:
        path: '{{ item }}'
        regexp: ^gpgcheck=0
        replace: gpgcheck=1
      loop: "{{ package_repos.files | map(attribute='path') | list }}"
      no_log: true

    - name: SCORED | 1.2.4 | PATCH |  Ensure gpgcheck is globally activated - main configuration
      replace:
        path: /etc/yum.conf
        regexp: '^\s*(gpgcheck\s*=\s*)0$'
        replace: '\g<1>1'
  when:
    - rhel8_cis_rule_1_2_4
  tags:
    - level1
    - scored
    - patch
    - rule_1.2.4

- name: NOTSCORED | 1.2.5 | PATCH | Ensure package manager repositories are configured
  command: dnf repolist
  register: yum_configured
  changed_when: no
  failed_when: no
  args:
    warn: false
  when:
    - rhel8_cis_rule_1_2_5
  tags:
    - level1
    - notscored
    - patch
    - rule_1.2.5
    - skip_ansible_lint

- name: SCORED | 1.3.1 | Ensure sudo is installed
  yum:
    name: sudo
    state: present
  when:
    - rhel8_cis_rule_1_3_1
  tags:
    - level1
    - scored
    - patch
    - rule_1.3.1

- name: SCORED | 1.3.2 | Ensure sudo commands use pty
  block:
    - name: SCORED | 1.3.2 | Ensure sudo commands use pty - check config
      command: grep -Er '^\s*Defaults\s+([^#]+,\s*)?use_pty\s*=' /etc/sudoers /etc/sudoers.d
      register: use_pty
      changed_when: false
      failed_when: false

    - name: SCORED | 1.3.2 | Ensure sudo commands use pty - write config
      lineinfile:
        dest: /etc/sudoers.d/{{ rhel8_cis_sudoers_file }}
        line: Defaults use_pty
        state: present
        owner: root
        group: root
        mode: 0400
        create: true
      when:
        - use_pty.rc == 1
  when:
    - rhel8_cis_rule_1_3_2
  tags:
    - level1
    - scored
    - patch
    - rule_1.3.2

- name: SCORED | 1.3.3 | Ensure sudo log file exists
  block:
    - name: SCORED | 1.3.3 | Ensure sudo log file exists - check config
      command: grep -Er '^\s*Defaults\s+([^#]+,\s*)?logfile\s*=' /etc/sudoers /etc/sudoers.d
      register: sudo_logfiles
      changed_when: false
      failed_when: false

    - name: SCORED | 1.3.3 | Ensure sudo log file exists - write config
      lineinfile:
        dest: /etc/sudoers.d/{{ rhel8_cis_sudoers_file }}
        line: Defaults logfile="{{ rhel8_cis_sudo_logfile }}"
        state: present
        owner: root
        group: root
        mode: 0400
        create: true
        validate: visudo -cf %s
      when:
        - sudo_logfiles.rc == 1
  when:
    - rhel8_cis_rule_1_3_3
  tags:
    - level1
    - scored
    - patch
    - rule_1.3.2

- name: SCORED | 1.4.1 | PATCH | Ensure AIDE is installed
  package:
    name: aide
    state: present
  when:
    - rhel8_cis_rule_1_4_1
  tags:
    - level1
    - scored
    - aide
    - patch
    - rule_1.4.1

- name: SCORED | 1.4.1 | PATCH | Ensure AIDE is installed
  command: /usr/sbin/aide --init -B 'database_out=file:/var/lib/aide/aide.db.gz'
  args:
    creates: /var/lib/aide/aide.db.gz
  changed_when: no
  failed_when: no
  async: 45
  poll: 0
  when:
    - rhel8_cis_config_aide
    - rhel8_cis_rule_1_4_1
  tags:
    - level1
    - scored
    - aide
    - patch
    - rule_1.4.1

- name: SCORED | 1.4.2 | PATCH | Ensure filesystem integrity is regularly checked
  cron:
    name: Run AIDE integrity check weekly
    cron_file: "{{ rhel8_cis_aide_cron['cron_file'] }}"
    user: "{{ rhel8_cis_aide_cron['cron_user'] }}"
    minute: "{{ rhel8_cis_aide_cron['aide_minute'] | default('0') }}"
    hour: "{{ rhel8_cis_aide_cron['aide_hour'] | default('5') }}"
    day: "{{ rhel8_cis_aide_cron['aide_day'] | default('*') }}"
    month: "{{ rhel8_cis_aide_cron['aide_month'] | default('*') }}"
    weekday: "{{ rhel8_cis_aide_cron['aide_weekday'] | default('*') }}"
    job: "{{ rhel8_cis_aide_cron['aide_job'] }}"
  when:
    - rhel8_cis_rule_1_4_2
  tags:
    - level1
    - scored
    - aide
    - file_integrity
    - patch
    - rule_1.4.2

- name: SCORED | 1.5.1 | PATCH | Ensure permissions on bootloader config are configured
  file:
    path: '{{ item }}'
    owner: root
    group: root
    mode: 0600
  loop:
    - /boot/grub2/grubenv
    - /boot/grub2/grub.cfg
  when:
    - grub_cfg.stat.exists
    - rhel8_cis_rule_1_5_1
  tags:
    - level1
    - scored
    - grub
    - patch
    - rule_1.5.1

- name: SCORED | 1.5.2 | PATCH | Ensure bootloader password is set
  grub_crypt:
    password: '{{ rhel8_cis_bootloader_password }}'
  register: grub_pass
  when:
    - rhel8_cis_set_boot_pass
    - rhel8_cis_rule_1_5_2
  tags:
    - level1
    - scored
    - grub
    - patch
    - rule_1.5.2

- name: SCORED | 1.5.2 | PATCH | Ensure bootloader password is set
  copy:
    dest: /boot/grub2/user.cfg
    content: GRUB2_PASSWORD={{ grub_pass.passhash }}
    mode: 0644
  notify: generate new grub config
  when:
    - rhel8_cis_set_boot_pass and grub_pass is defined and passhash in grub_pass
    - rhel8_cis_rule_1_5_2
  tags:
    - level1
    - scored
    - grub
    - patch
    - rule_1.5.2

- name: NOTSCORED | 1.5.3 | PATCH | Ensure authentication required for single user
    mode
  block:
    - name: NOTSCORED | 1.5.3 | PATCH | Ensure authentication required for single user mode - Emergency
      lineinfile:
        dest: /usr/lib/systemd/system/emergency.service
        regexp: systemd-sulogin-shell
        line: ExecStart=--/usr/lib/systemd/systemd-sulogin-shell emergency
      when:
        - rhel8_cis_rule_1_5_3
      tags:
        - level1
        - level2
        - patch
        - rule_1.5.3

    - name: NOTSCORED | 1.5.3 | PATCH | Ensure authentication required for single user mode - Rescue
      lineinfile:
        dest: /usr/lib/systemd/system/rescue.service
        regexp: systemd-sulogin-shell
        line: ExecStart=-/usr/lib/systemd/systemd-sulogin-shell rescue
      when:
        - rhel8_cis_rule_1_5_3
      tags:
        - level1
        - level2
        - patch
        - rule_1.5.3

- name: SCORED | 1.6.1 | PATCH | Ensure core dumps are restricted
  lineinfile:
    state: present
    dest: /etc/security/limits.conf
    regexp: ^#?\\*.*core
    line: '*                hard    core            0'
    insertbefore: ^# End of file
  when:
    - rhel8_cis_rule_1_6_1
  tags:
    - level1
    - scored
    - limits
    - patch
    - rule_1.6.1

- name: SCORED | 1.6.1 | PATCH | Ensure core dumps are restricted
  sysctl:
    name: fs.suid_dumpable
    value: '0'
    state: present
    reload: yes
    sysctl_set: yes
    sysctl_file: /etc/sysctl.d/cis.conf
  when:
    - rhel8_cis_rule_1_6_1
  tags:
    - level1
    - scored
    - sysctl
    - patch
    - rule_1.6.1

- name: SCORED | 1.6.2 | PATCH | Ensure address space layout randomization (ASLR)
    is enabled
  sysctl:
    name: kernel.randomize_va_space
    value: '2'
    state: present
    reload: yes
    sysctl_set: yes
    sysctl_file: /etc/sysctl.d/cis.conf
  when:
    - rhel8_cis_rule_1_6_2
  tags:
    - level1
    - scored
    - patch
    - rule_1.6.2

- name: SCORED | 1.7.1.1 | PATCH | Ensure SELinux is installed
  package:
    name: libselinux
    state: installed
  when:
    - rhel8_cis_rule_1_7_1_1
  tags:
    - level2
    - scored
    - patch
    - rule_1.7.1.1

- name: SCORED | 1.7.1.2 | PATCH | Ensure SELinux is not disabled in bootloader configuration
  replace:
    path: /boot/grub2/grubenv
    regexp: kernelopts=(\S+\s+)*(selinux=0|enforcing=0)+\b
  register: selinux_grub_patch
  ignore_errors: yes
  notify: generate new grub config
  when:
    - grub_cfg.stat.exists
    - rhel8_cis_rule_1_7_1_2
  tags:
    - level2
    - scored
    - patch
    - rule_1.7.1.2

- name: SCORED | 1.7.1.3 | PATCH | Ensure SELinux policy is configured
  selinux:
    conf: /etc/selinux/config
    policy: '{{ rhel8_cis_selinux_pol }}'
    state: enforcing
  when:
    - not rhel8_cis_selinux_disable
    - rhel8_cis_rule_1_7_1_3
  tags:
    - level2
    - scored
    - selinux
    - patch
    - rule_1.7.1.3

- name: SCORED | 1.7.1.4 | PATCH | Ensure the SELinux state is enforcing
  selinux:
    conf: /etc/selinux/config
    policy: '{{ rhel8_cis_selinux_pol }}'
    state: enforcing
  when:
    - not rhel8_cis_selinux_disable
    - rhel8_cis_rule_1_7_1_4
  tags:
    - level2
    - scored
    - selinux
    - patch
    - rule_1.7.1.4

- name: SCORED | 1.7.1.5 | CHECK | Ensure no unconfined services exist
  shell: ps -eZ | grep unconfined_service_t
  register: unconfined_services
  changed_when: no
  failed_when: no
  when:
    - rhel8_cis_rule_1_7_1_5
  tags:
    - level2
    - scored
    - rule_1.7.1.5


- name: SCORED | 1.7.1.6 | PATCH | Ensure SETroubleshoot is not installed
  package:
    name: setroubleshoot
    state: absent
  when:
    - rhel8_cis_rule_1_7_1_6
  tags:
    - level2
    - scored
    - selinux
    - patch
    - rule_1.7.1.6

- name: SCORED | 1.7.1.7 | PATCH | Ensure the MCS Translation Service (mcstrans) is
    not installed
  package:
    name: mcstrans
    state: absent
  when:
    - rhel8_cis_rule_1_7_1_7
  tags:
    - level2
    - scored
    - patch
    - rule_1.7.1.7

- name: SCORED | 1.8.1.1 | PATCH | Ensure message of the day is configured properly
  template:
    src: etc/motd.j2
    dest: /etc/motd
    mode: 0644
  when:
    - rhel8_cis_rule_1_8_1_1
  tags:
    - level1
    - banner
    - patch
    - rule_1.8.1.1

- name: NOTSCORED | 1.8.1.2 | PATCH | Ensure local login warning banner is configured
    properly
  template:
    src: etc/issue.j2
    dest: /etc/issue
    mode: 0644
  when:
    - rhel8_cis_rule_1_8_1_2
  tags:
    - level1
    - patch
    - rule_1.8.1.2

- name: NOTSCORED | 1.8.1.3 | PATCH | Ensure remote login warning banner is configured
    properly
  template:
    src: etc/issue.net.j2
    dest: /etc/issue.net
    mode: 0644
  when:
    - rhel8_cis_rule_1_8_1_3
  tags:
    - level1
    - banner
    - patch
    - rule_1.8.1.3

- name: NOTSCORED | 1.8.1.4 | PATCH | Ensure permissions on /etc/motd are configured
  file:
    dest: /etc/motd
    state: file
    owner: root
    group: root
    mode: 0644
  when:
    - rhel8_cis_rule_1_8_1_4
  tags:
    - level1
    - perms
    - patch
    - rule_1.8.1.4

- name: SCORED | 1.8.1.5 | PATCH | Ensure permissions on /etc/issue are configured
  file:
    dest: /etc/issue
    state: file
    owner: root
    group: root
    mode: 0644
  when:
    - rhel8_cis_rule_1_8_1_5
  tags:
    - level1
    - perms
    - patch
    - rule_1.8.1.5

- name: NOTSCORED | 1.8.1.6 | PATCH | Ensure permissions on /etc/issue.net are configured
  file:
    dest: /etc/issue.net
    state: file
    owner: root
    group: root
    mode: 0644
  when:
    - rhel8_cis_rule_1_8_1_6
  tags:
    - level1
    - perms
    - patch
    - rule_1.8.1.6

- name: SCORED | 1.8.2 | PATCH | Ensure GDM login banner is configured
  template:
    src: etc/gdm/greeter.dconf-defaults.j2
    dest: /etc/gdm/greeter.dconf-defaults
    owner: root
    group: root
    mode: 0644
  when:
    - "'gdm' in ansible_facts.packages"
    - rhel8_cis_rule_1_8_2
  tags:
    - level1
    - level2
    - patch
    - rule_1.8.2

- name: NOTSCORED | 1.9 | PATCH | Ensure updates, patches, and additional security
    software are installed
  package:
    name: '*'
    state: latest
  when:
    - rhel8_cis_rule_1_9
  tags:
    - level1
    - level2
    - patch
    - rule_1.9
    - skip_ansible_lint

- name: SCORED | 1.10 / 1.11 | Check system-wide crypto policy
  command: grep -E '^\s*(LEGACY|DEFAULT|FUTURE|FIPS)\s*$' /etc/crypto-policies/config
  changed_when: false
  failed_when: false
  when:
    - rhel8_cis_rule_1_10 or rhel8_cis_rule_1_11
  register: crypto_policy
  tags:
    - scored
    - level1
    - level2

- name: SCORED | 1.10 | Ensure system-wide crypto policy is not legacy
  command: update-crypto-policies --set {{ rhel8_cis_crypto_policy }}
  when:
    - rhel8_cis_rule_1_10
    - crypto_policy.stdout == 'LEGACY'
  tags:
    - level1
    - patch
    - rule_1_10

- name: SCORED | 1.11 | Ensure system-wide crypto policy is FUTURE or FIPS
  command: update-crypto-policies --set {{ rhel8_cis_crypto_policy }}
  when:
    - rhel8_cis_rule_1_11
    - crypto_policy.stdout == 'DEFAULT' or crypto_policy.stdout == 'LEGACY'
    - crypto_policy.stdout != rhel8_cis_crypto_policy
  tags:
    - level2
    - patch
    - rule_1_11
